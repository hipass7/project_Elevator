필요한 CAN 통신 목록

1) panel <-> main
    send)
        - button (bool)
    receive)
        - elevator 위치 (vector)

2) elevator <-> main
    send)
        - button (int)
    receive)
        - 목적지 (vector)
        
CAN 사용법
1) #if 0을 1로 변경

2) 아래 명령어 수행
sudo modprobe vcan
sudo ip link add dev vcan0 type vcan
sudo ip link set up vcan0

3) rx_id 1027로 0x01을 보내는 예시
cansend vcan0 403#01


윈도우에서 빌드할 때
cmake ..
cmake --build ./
Debug 폴더 안에 .exe 생김

받을 수 있는 요청
1) ev 내 층수버튼
2) 각 층 panel의 위/아래 버튼


스케줄러 in / out 방식

input
1) 내부 호출이라면 (현재 상황, 내부호출여부, ev_id, 층수)
2) 외부 호출이라면 (현재 상황, 내부호출여부, 층수, 방향)
현재 상황 = request_list ([2, 3, 5], [7, 4, 2])

엘리베이터 초기화
1) 엘리베이터가 켜지면 CAN 통신을 통해 엘리베이터 정보를 mainController에게 전달
ex. data[0] = 0xFF (초기화임을 알림)
    data[1] = 0x01 (ev id)
2) 그러면 mainController가 이 신호를 받아 해당 id로 map을 통해 ev id와 request_list로 ev_map을 관리


[전원 On]
    ↓
[각 보드 (Elevator/Panel/MainController) 자동 부팅]
    ↓
[각 보드에서 자기 역할 감지 및 초기화 (CAN 수신 or Config File)]
    ↓
[MainController가 전체 상태 확인 후 운영 시작]


1개의 main controller 보드
2개의 elevator 보드
3개의 panel 보드가 있다고 가정

보드에 전원은 건물의 전원 ON에 따라 들어오는 구조.
보드에 전원이 들어오는 순간 모든 binary는 자동 실행 (init.d)
하지만 initialize 대기 단계에서 initialize 신호를 계속 기다리기


<web 실행하기>
npm install
node can-web.js
http://localhost:3000